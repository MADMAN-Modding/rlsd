import { dir_exists } from "std/fs"

const RED = "\e[31m"
const GREEN = "\e[32m"
const BLUE = "\e[34m"
const RESET = "\e[0m"

fun echo_color(text: Text, color: Text): Null {
    // I'm not sure why but I need to do the reset on a separate concatenation
    let text = "{color}{text}"

    trust $ echo -e "{text}{RESET}"$
}

// List of target names
let architectures = ["x86_64-unknown-linux-gnu", "x86_64-unknown-linux-musl", "armv7-unknown-linux-gnueabihf", "aarch64-unknown-linux-gnu"]

// List of names for each target in the same order
let arch_names = ["x86_64", "musl", "armv7", "aarch64"]

// Builds each architecture
for i, arch in architectures {
    echo_color("Building Linux-{arch_names[i]}...", BLUE)

    trust $ sleep 1 $

    $ cross build --target {arch} --release $ failed {
        echo_color("{arch_names[i]} build failed", RED)
    }
}

// Copy files to bin folder
if dir_exists("target") {
    for i, arch in architectures {
        let build_path = "target/{arch}/release/rlsd"

        $ cp {build_path} bin/linux/rlsd-{arch_names[i]} $ failed {
            echo_color("Failed to copy rlsd-{arch_names[i]}", RED)
        }
    }

    echo_color("Copy Completed", GREEN)
} else {
    echo_color("'target' dir not found, make sure you are running this script in the project root", RED)
}