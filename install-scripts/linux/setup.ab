import { file_download } from "std/http"
import { file_chmod, file_chown } from "std/fs"
import { input_confirm, is_root } from "std/env"

let server_url = "https://madman-modding.github.io/rlsd"

const RED = "\e[31m"
const GREEN = "\e[32m"
const BLUE = "\e[34m"
const RESET = "\e[0m"

fun echo_color(text: Text, color: Text): Null {
    // I'm not sure why but I need to do the reset on a separate concatenation
    let text = "{color}{text}"

    trust $ echo -e "{text}{RESET}"$
}

fun download_rlsd(version: Text): Bool {
    echo_color("Installing rlsd...", BLUE)

    let download_result = file_download("{server_url}/bin/linux/{version}", "/usr/bin/rlsd")

    let chmod_result = file_chmod("/usr/bin/rlsd", "+x")

    return download_result and chmod_result
}

fun download_services(): Bool {
    echo_color("Installing services...", BLUE)    

    let service_dir = "/etc/systemd/system"

    // Download client service
    "services/linux/rlsd-server.service"
    let client_result = file_download("{server_url}/services/linux/rlsd-client.service", "{service_dir}/rlsd-client.service")

    // Download server service
    let server_result = file_download("{server_url}/services/linux/rlsd-server.service", "{service_dir}/rlsd-server.service")

    // Return true if both succeed
    return client_result and server_result
}

/// Runs the setup script
fun setup(): Bool? {
    // If the user answers yes, rsld-musl is selected, otherwise rlsd is selected
    let choice = input_confirm("Download the Linux-musl version? (Recommended if you are having glibc errors)")
        then "rlsd-musl"
        else "rlsd"

    echo_color("{choice} selected", BLUE)

    // Downloads the selected binary
    if download_rlsd(choice) {echo_color("Install Succeeded", GREEN)}
    else {echo_color("Install Failed, check the above error message", RED) fail}

    // Install services
    let choice = input_confirm("{BLUE}Install systemd services?{RESET}", true)

    if (choice) {
        if download_services(): echo_color("Install Succeeded", GREEN)
        else: echo_color("Install Failed, check the above error message", RED)
    }

    return true
}

main(args) { 
    // Checks if the user is root
    if is_root() {
        echo_color("Root check passed", GREEN)

        let result = trust setup()

        if result: echo_color("Setup Finished", GREEN)
        else: echo_color("Setup Failed", RED)
    } else {
        echo_color("Root check failed; please run as root", RED)
    }
}